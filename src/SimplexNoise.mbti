package "ZSeanYves/SimplexNoise"

// Values
fn create2d(Int) -> (Array[Int], Array[Array[Float]])

fn create3d(Int) -> (Array[Int], Array[Array[Float]])

fn create4d(Int) -> (Array[Int], Array[Array[Float]])

fn fbm2d(Array[Float], Int, Float, Float, Array[Int], Array[Array[Float]], Float) -> Float

fn fbm2d_image(String, Int, Int, Int, Array[Array[Float]], NoiseConfig, Bool, Bool, strength~ : Float = ..) -> Bool raise

fn fbm3d(Array[Float], Int, Float, Float, Array[Int], Array[Array[Float]], Float) -> Float

fn fbm3d_image(String, Int, Int, Float, Int, Array[Array[Float]], NoiseConfig, Bool, Bool, strength~ : Float = ..) -> Bool raise

fn fbm3d_slices(String, Int, Int, Int, Array[Array[Float]], NoiseConfig, Bool, Bool, strength~ : Float = .., Int) -> Unit raise

fn fbm4d(Array[Float], Int, Float, Float, Array[Int], Array[Array[Float]], Float) -> Float

fn fbm4d_image(String, Int, Int, Float, Float, Int, Array[Array[Float]], NoiseConfig, Bool, Bool, strength~ : Float = ..) -> Bool raise

fn fbm4d_slices(String, Int, Int, Float, Int, Array[Array[Float]], NoiseConfig, Bool, Bool, strength~ : Float = .., Int) -> Unit raise

let grads2d : Array[Array[Float]]

let grads3d : Array[Array[Float]]

let grads4d : Array[Array[Float]]

fn new_NoiseConfig(Int, Float, Float, Float) -> NoiseConfig

fn noise2d(Array[Float], Array[Int], Array[Array[Float]], Float) -> Float

fn noise2d_image(String, Int, Int, Float, Int, Array[Array[Float]], Bool, Bool, strength~ : Float = ..) -> Bool raise

fn noise3d(Array[Float], Array[Int], Array[Array[Float]], Float) -> Float

fn noise3d_image(String, Int, Int, Float, Float, Int, Array[Array[Float]], Bool, Bool, strength~ : Float = ..) -> Bool raise

fn noise3d_slices(String, Int, Int, Float, Int, Array[Array[Float]], Bool, Bool, strength~ : Float = .., Int) -> Unit raise

fn noise4d(Array[Float], Array[Int], Array[Array[Float]], Float) -> Float

fn noise4d_image(String, Int, Int, Float, Float, Float, Int, Array[Array[Float]], Bool, Bool, strength~ : Float = ..) -> Bool raise

fn noise4d_slices(String, Int, Int, Float, Float, Int, Array[Array[Float]], Bool, Bool, strength~ : Float = .., Int) -> Unit raise

fn tfbm2d_image(String, Int, Int, Int, Array[Array[Float]], NoiseConfig, pi~ : Double = .., Bool) -> Bool raise

fn tfbm3d_image(String, Int, Int, Int, Int, Float, Array[Array[Float]], NoiseConfig, pi~ : Double = .., Bool) -> Bool raise

fn tfbm4d_image(String, Int, Int, Int, Int, Float, Float, Int, Array[Array[Float]], NoiseConfig, pi~ : Double = .., Bool) -> Bool raise

fn tnoise2d_image(String, Int, Int, Float, Int, Array[Array[Float]], pi~ : Double = .., Bool) -> Bool raise

fn tnoise3d_image(String, Int, Int, Int, Float, Int, Float, Array[Array[Float]], pi~ : Double = .., Bool) -> Bool raise

fn tnoise4d_image(String, Int, Int, Int, Int, Float, Float, Int, Array[Array[Float]], Float, pi~ : Double = .., Bool) -> Bool raise

// Types and methods
pub struct NoiseConfig {
  octaves : Int
  persistence : Float
  lacunarity : Float
  scale : Float
}

// Type aliases

// Traits

